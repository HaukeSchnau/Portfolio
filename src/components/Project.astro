---
import ProjectCta from "./ProjectCta.astro";

export interface Props {
    title: string;
    subtitle: string;
    href?: string;
    ctaText: string;
    imgUrl: string;
    imgAlt: string;
    color: string;
}
const { title, subtitle, href, ctaText, imgUrl, imgAlt, color } = Astro.props as Props
---

<li style={`--project-color: ${color}`}>
    <div class="info">
        <div class="title">{title}</div>
        <div class="subtitle">
            {subtitle}
        </div>
        <div class="text">
            <slot />
        </div>
        {href && <ProjectCta href={href}>{ctaText}</ProjectCta>}
    </div>
    <div class="img-wrapper">
        <img src={imgUrl} alt={imgAlt} loading="lazy" />
    </div>
</li>

<style>
    li {
        list-style-type: none;
        --project-color: red;
    }

    .info {
        padding: 2rem var(--hPadding);
        padding-bottom: 6rem;
        margin-bottom: -5rem;
        background: var(--lightBlue);
        display: flex;
        flex-direction: column;
    }

    .title {
        font-weight: bold;
        color: var(--yellow);
        font-size: clamp(1rem, 5vw, 1.8rem);
    }

    .subtitle {
        color: var(--yellow);
        font-style: italic;
        opacity: 0.85;
        font-size: clamp(0.9rem, 2vw, 1.2rem);
    }

    .text {
        padding: 1.5rem 0;
        font-size: clamp(1rem, 2vw, 1.2rem);
    }

    .img-wrapper {
        position: relative;
    }

    .img-wrapper img {
        border-radius: 30px 0 0 30px;
    }

    .img-wrapper::before {
        position: absolute;
        content: "";
        bottom: -1.5rem;
        z-index: -1;
        right: 0;
        width: 80%;
        height: 3rem;
        background-color: var(--project-color);
        border-radius: 30px 0 0 30px;
        opacity: 0.15;
    }

    li:nth-child(2n) .img-wrapper img {
        border-radius: 0 30px 30px 0;
    }

    li:nth-child(2n) .img-wrapper::before {
        right: initial;
        left: 0;
        border-radius: 0 30px 30px 0;
    }

    /* Desktop */
    @media only screen and (min-width: 768px) {
        li {
            display: flex;
            padding-left: var(--hPadding);
            gap: 5rem;
            margin-bottom: 10rem;
        }

        .info {
            background: none;
            padding: 0;
        }

        .img-wrapper {
            flex: 0 0 50%;
            /* margin-right: var(--hPadding); */
        }

        .img-wrapper img {
            width: 100%;
        }

        .img-wrapper::before {
            width: 140%;
            height: 6rem;
            bottom: -3rem;
        }

        li:nth-child(2n) {
            flex-direction: row-reverse;
            justify-content: flex-end;
            padding-right: var(--hPadding);
            padding-left: 0;
        }
    }

    /* Mobile */
    @media only screen and (max-width: 767px) {
        .img-wrapper {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 5rem;

        }

        .img-wrapper img {
            height: 10rem;
        }

        li:nth-child(2n) {
            .img-wrapper {
                justify-content: flex-start;
            }
        }
    }
</style>